package pt.inescid.l2f.xipapi.domain;

import java.util.LinkedList;

import org.w3c.dom.Document;
import org.w3c.dom.Element;



/**
 * API to handle the XML generated by the XIP program.
 * 
 * <P>A Token is a leaf node with a MAIN CATGEORIES: adj, adv, art, conj, foreign, 
 *    interj, interjection,noun, num, prep, pron, punct, symbol, pastpart,
 *    verb, pronrel.
 *  
 * @author Nuno Nobre [2010]
 * @author Nuno Mamede & Filipe Carapinha [JavaDoc 2012/May]
 * @version 1.0
 */
public class Token extends XIPNode {

	//##############################################################################
	//   ###########################################################################
	//      ATTRIBUTES
	//   ###########################################################################
	//##############################################################################

	/** The token part-of-speech */
	private String pos;

	/** The token surface */
	private String word;

	/** The token lemmas */
	private LinkedList<String> lemmas;


	//##############################################################################
	//   ###########################################################################
	//      CONSTUCTORS
	//   ###########################################################################
	//##############################################################################

	/**
	 * Constructor.
	 * 
	 * @param parent          ?????????
	 * @param name            ?????????
	 * @param pos             ?????????
	 * @param start           ?????????
	 * @param end             ?????????
	 * @param word            ?????????
	 * @param sentenceNumber  ?????????
	 * @param nodeNum         ?????????
	 */
	public Token(XIPNode parent, String name, String pos, String start, String end, String word, int sentenceNumber, int nodeNum) {
		super(parent, word, start, end, parent.getNodeNumber(), sentenceNumber, nodeNum);
		this.word = word;
		this.setPos(pos);
		this.lemmas = new LinkedList<String>();
	}


	//##############################################################################
	//   ###########################################################################
	//      GETTERS AND SETTERS
	//   ###########################################################################
	//##############################################################################

	/**
	 * Getter.
	 * @return the token surface
	 */
	public String getWord() {
		return word;
	}

	/**
	 * Getter.
	 * @return the token part-of-speech
	 */
	public String getPos() {
		return pos;
	}

	/**
	 * Getter.
	 * @return the token lemmas
	 */
	public LinkedList<String> getLemmas() {
		return lemmas;
	}


	/**
	 * Setter.
	 * @param word the token surface
	 */
	public void setWord(String word) {
		this.word = word;
	}

	/**
	 * Setter.
	 * @param pos the token part-of-speech
	 */
	public void setPos(String pos) {
		this.pos = pos;
	}

	/**
	 * Setter.
	 * @param lemma a new lemma
	 */
	public void addLemma(String lemma) {
		this.lemmas.add(lemma);
	}

	/**
	 * Setter (removal).
	 * @param lemma a lemma to be removed from the 
	 */
	public void removeLemma(String lemma) {
		this.lemmas.remove(lemma);
	}



	//##############################################################################
	//   ###########################################################################
	//      CONVERTERS
	//   ###########################################################################
	//##############################################################################

	/**
	 * 
	 * @return the string representing the dependency (its token surface)
	 */
	public String toString() {
		return getWord();
	}


	/**
	 * XML Output function.
	 * 
	 * Filipe Carapinha [2012/Sep]
	 */	
	public void exportXMLDOM(Element parent, Document doc){

		Element thisNode = doc.createElement("TOKEN");
		thisNode.setAttribute("pos", this.getPos());
		thisNode.setAttribute("start", parent.getAttribute("start"));
		thisNode.setAttribute("end", parent.getAttribute("end"));

		thisNode.setTextContent(this.word);

		for(String l : lemmas){
			Element reading = doc.createElement("READING");
			reading.setAttribute("lemma", l);
			reading.setAttribute("pos", pos);
			//TODO : Falta as features que o reading pode ter 
			//			if (this instanceof XIPNode) {
			//				XIPNode cast = (XIPNode) this;
			//				if(cast.getFeatures() != null){
			//					for(Feature f : cast.getFeatures()){
			//						f.exportXMLDOM(reading, doc);
			//					}
			//				}
			//				
			//			}

			thisNode.appendChild(reading);
		}

		parent.appendChild(thisNode);

	}

}
